{"version":3,"file":"pl-states.js","sources":["../../../../xpack/scripts/pl-states.entry.ts"],"sourcesContent":["interface Theme {\n  value: string;\n  name: string;\n}\n\ninterface StateOption {\n  name: string;\n  value: string;\n}\n\ninterface State {\n  name: string;\n  options?: StateOption[];\n  multiple?: boolean;\n}\n\ninterface StateButton {\n  parentSelector?: string;\n  styleModifier: string;\n  zIndex?: number;\n}\n\ninterface ComponentState {\n  name: string;\n  selector: string;\n  button?: StateButton;\n  states: State[];\n}\n\nlet index = 100000;\n\nconst themes: Theme[] = [\n  {\n    value: 'theme-blue-p',\n    name: 'Blue',\n  },\n  {\n    value: 'theme-white-p',\n    name: 'White',\n  },\n  {\n    value: 'theme-sand-s',\n    name: 'Sand',\n  },\n  {\n    value: 'theme-flow-25',\n    name: 'Flow 25',\n  },\n  {\n    value: 'theme-wave-ac',\n    name: 'Wave',\n  },\n  {\n    value: 'theme-wave-50',\n    name: 'Wave 50',\n  },\n  {\n    value: 'theme-pearl-s',\n    name: 'Pearl',\n  },\n  {\n    value: 'theme-pebble-s',\n    name: 'Pebble',\n  },\n];\n\nconst newId = () => {\n  return 'pl-state-id-' + index++;\n};\n\nconst createSelect = (state: State, classList: DOMTokenList) => {\n  if (!state.options) {\n    return '';\n  }\n\n  const options = state.options;\n  const name = newId();\n  const header = state.multiple ? 'Select many...' : (options.find((o) => classList.contains(o.value))?.name ?? '---');\n  const type = state.multiple ? 'checkbox' : 'radio';\n\n  let optionsHtml = '';\n\n  options.forEach((option: StateOption) => {\n    const selectedHtml = classList.contains(option.value) ? 'checked' : '';\n    const id = newId();\n\n    optionsHtml +=\n      `<input name=\"${name}\" class=\"pl-state-bar__input\" type=\"${type}\" id=\"${id}\" data-name=\"${option.name}\" value=\"${option.value}\" ${selectedHtml}/>` +\n      `<label class=\"pl-state-bar__label\" for=\"${id}\"><span>${option.name}</span></label>`;\n  });\n\n  const html =\n    `<div class=\"pl-state-bar__group\">` +\n    `<div>${state.name}:</div>` +\n    `<div class=\"pl-state-bar__group-header\">${header}</div>` +\n    `<div class=\"pl-state-bar__checkbox-group\">${optionsHtml}</div>` +\n    `</div>`;\n\n  return html;\n};\n\nconst deactiveStateButtons = () => {\n  const stateButtons = [...document.querySelectorAll('.pl-state__button')];\n\n  stateButtons.forEach((stateButton) => stateButton.classList.remove('active'));\n};\n\nconst closeButtonClickHandler = (stateBar: HTMLElement) => {\n  stateBar.classList.remove('expand');\n  document.body.classList.remove('pl-state-expand');\n  deactiveStateButtons();\n  window.dispatchEvent(new Event('resize'));\n};\n\nconst stateButtonClickHandler = (item: HTMLElement, stateButton: HTMLElement, plState: ComponentState) => {\n  deactiveStateButtons();\n\n  const stateBar: HTMLElement | null = document.querySelector('.pl-state-bar');\n\n  if (!stateBar) {\n    return;\n  }\n\n  if (stateButton.classList.contains('active')) {\n    closeButtonClickHandler(stateBar);\n\n    return;\n  }\n\n  const stateBarContent = stateBar.querySelector('.pl-state-bar__content');\n\n  if (stateBarContent) {\n    let stateBarContentHtml = '';\n    let index = 0;\n\n    plState.states.forEach((state) => {\n      const combinedState = state.name === 'Theme' && !state.options ? { ...state, options: themes } : state;\n\n      stateBarContentHtml += createSelect(combinedState, item.classList);\n\n      index++;\n\n      if (index == 1) {\n        stateBarContentHtml += stateBarCloseButtonHtml();\n      }\n    });\n    stateBarContent.innerHTML = stateBarContentHtml;\n\n    const closeButton = stateBarContent.querySelector('.pl-state-bar__close-button');\n\n    if (closeButton) {\n      closeButton.addEventListener('click', () => closeButtonClickHandler(stateBar));\n    }\n\n    const stateBarGroups = [...stateBarContent.querySelectorAll('.pl-state-bar__group')];\n\n    stateBarGroups.forEach((stateBarGroup) => {\n      const stateBarGroupHeader = stateBarGroup.querySelector('.pl-state-bar__group-header');\n      const checkboxGroup = stateBarGroup.querySelector('.pl-state-bar__checkbox-group');\n\n      if (!stateBarGroupHeader || !checkboxGroup) {\n        return;\n      }\n\n      if (stateBarGroupHeader) {\n        stateBarGroupHeader.addEventListener('click', () => {\n          checkboxGroup.classList.toggle('expand');\n        });\n        document.addEventListener('click', (e: MouseEvent) => {\n          if (!e.target) {\n            return;\n          }\n\n          const node = e.target as Node;\n\n          if (!checkboxGroup.contains(node) && !stateBarGroupHeader.contains(node)) {\n            checkboxGroup.classList.remove('expand');\n          }\n        });\n      }\n\n      const checkboxes = stateBarGroup.querySelectorAll(\"input[type='checkbox']\");\n\n      [].forEach.call(checkboxes, (checkbox: HTMLInputElement) => {\n        checkbox.addEventListener('change', () => {\n          if (!checkbox.value) {\n            return;\n          }\n\n          if (checkbox.checked) {\n            item.classList.add(checkbox.value);\n          } else {\n            item.classList.remove(checkbox.value);\n          }\n          window.dispatchEvent(new Event('resize'));\n        });\n      });\n\n      const radios = stateBarGroup.querySelectorAll(\"input[type='radio']\");\n\n      [].forEach.call(radios, (radio: HTMLInputElement) => {\n        radio.addEventListener('change', () => {\n          [].forEach.call(radios, (r: HTMLInputElement) => {\n            if (r.value) {\n              item.classList.remove(r.value);\n            }\n          });\n          if (radio.value) {\n            item.classList.add(radio.value);\n          }\n          stateBarGroupHeader.textContent = radio.getAttribute('data-name');\n          checkboxGroup.classList.remove('expand');\n        });\n      });\n\n      const radioLabels = [...stateBarGroup.querySelectorAll(\"input[type='radio'] + label\")];\n\n      radioLabels.forEach((radioLabel) => {\n        radioLabel.addEventListener('click', () => {\n          checkboxGroup.classList.remove('expand');\n        });\n      });\n    });\n\n    stateBar.classList.add('expand');\n    stateButton.classList.add('active');\n    document.body.classList.add('pl-state-expand');\n    window.dispatchEvent(new Event('resize'));\n  }\n};\nconst stateBarCloseButtonHtml = () => {\n  return `<div class=\"pl-state-bar__buttons\"><a class=\"pl-state-bar__close-button\"></a></div>`;\n};\n\nconst appendButtons = (states: ComponentState[]) => {\n  const stateBarHtml = `<div class=\"pl-state-bar\"><div class=\"pl-state-bar__content\"></div>${stateBarCloseButtonHtml()}</div>`;\n\n  document.body.insertAdjacentHTML('beforeend', stateBarHtml);\n  const stateBar: HTMLElement | null = document.querySelector('.pl-state-bar');\n\n  if (!stateBar) {\n    return;\n  }\n\n  const closeButton = stateBar.querySelector('.pl-state-bar__close-button');\n\n  if (closeButton) {\n    closeButton.addEventListener('click', () => closeButtonClickHandler(stateBar));\n  }\n\n  [].forEach.call(states, (plState: ComponentState) => {\n    if (!plState || !plState.selector) {\n      return;\n    }\n\n    const buttonModifier = plState.button?.styleModifier ?? '';\n    const buttonTitle = plState.name ? `title=\"Show state modifier for: ${plState.name}\"` : '';\n    const buttonZIndex = plState.button?.zIndex ? `style=\"z-index: ${plState.button.zIndex};\"` : '';\n\n    const items = document.querySelectorAll(plState.selector);\n\n    [].forEach.call(items, (item: HTMLElement) => {\n      const html =\n        `<div class=\"pl-state ${buttonModifier}\" ${buttonZIndex}>` +\n        `<div class=\"pl-state__controls\">` +\n        `<button class=\"pl-state__button\" ${buttonTitle}>` +\n        `<img src=\"${import.meta.env.BASE_URL}pl-states.svg\" loading=\"async\">` +\n        `</button></div></div>`;\n\n      const stateButtonParent = plState.button?.parentSelector ? item.querySelector(plState.button.parentSelector) : item;\n\n      if (!stateButtonParent) {\n        return;\n      }\n      stateButtonParent.insertAdjacentHTML('beforeend', html);\n\n      const stateContainer: HTMLElement | null = stateButtonParent.querySelector(':scope > .pl-state');\n\n      if (!stateContainer) {\n        return;\n      }\n\n      const stateButton: HTMLElement | null = stateContainer.querySelector('.pl-state__button');\n\n      if (stateButton) {\n        stateButton.addEventListener('click', () => {\n          stateButtonClickHandler(item, stateButton, plState);\n        });\n      }\n    });\n  });\n\n  addEventListener('resize', function () {\n    const stateBar = document.querySelector('.pl-state-bar');\n\n    if (!stateBar) {\n      return;\n    }\n\n    const stateBarRect = stateBar.getBoundingClientRect();\n\n    document.documentElement.style.setProperty('--pl-state-bar-height', Math.ceil(stateBarRect.height) + 'px');\n  });\n};\n\nconst init = () => {\n  const localStorageKey = 'pl-show-state-selector';\n  const showStateSelector = localStorage.getItem(localStorageKey);\n\n  if (!showStateSelector) {\n    return;\n  }\n\n  fetch(import.meta.env.BASE_URL + 'pl-states.json')\n    .then((response) => response.json())\n    .then((data) => appendButtons(data));\n};\n\ninit();\n\nexport {};\n"],"names":["index","themes","newId","createSelect","state","classList","options","name","header","o","type","optionsHtml","option","selectedHtml","id","deactiveStateButtons","stateButton","closeButtonClickHandler","stateBar","stateButtonClickHandler","item","plState","stateBarContent","stateBarContentHtml","combinedState","stateBarCloseButtonHtml","closeButton","stateBarGroup","stateBarGroupHeader","checkboxGroup","e","node","checkboxes","checkbox","radios","radio","r","radioLabel","appendButtons","states","stateBarHtml","buttonModifier","buttonTitle","buttonZIndex","items","html","stateButtonParent","stateContainer","stateBarRect","init","response","data"],"mappings":"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"}